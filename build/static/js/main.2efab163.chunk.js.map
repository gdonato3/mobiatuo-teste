{"version":3,"sources":["store/UserStore.js","store/UIStore.js","store/index.js","store/RootStore.js","pages/home/HomeContainer.js","pages/home/components/SelectComponent.js","store/DataStore.js","pages/home/components/CardComponent.js","pages/home/components/LoadingComponent.js","pages/home/HomeComponent.js","pages/home/index.js","config/routes.js","App.js","serviceWorker.js","index.js"],"names":["_defaultInitialState","welcome","remotedev","decorate","UserStore","initialState","_this","this","Object","classCallCheck","setInitialState","observable","action","isFetching","UIStore","setIsFetching","instance","RootStore","configure","enforceActions","userStore","uiStore","HomeContainer","ViewComponent","props","viewComponent","viewComponentProps","react","React","SelectComponent","possibleConstructorReturn","getPrototypeOf","call","state","brandData","modelsData","yearsData","selectedBrand","selectedModel","selectedYear","vehicleData","self","data","checkLoading","fetch","then","response","json","responseJson","setState","catch","error","console","e","target","value","modelos","setData","getBrand","brandOptions","map","d","key","codigo","nome","modelsOptions","yearsOptions","className","onChange","getModels","bind","disabled","getYears","length","getVehicleData","DataStore","mainData","status","isLoading","store_DataStore","card","observer","_React$Component","CardComponent","inherits","createClass","Valor","Modelo","Marca","AnoModelo","Combustivel","CodigoFipe","MesReferencia","TipoVeiculo","SiglaCombustivel","LoadingComponent","role","home","HomeComponent","apply","arguments","store","components_LoadingComponent","components_SelectComponent","components_CardComponent","Container","component","stores","undefined","Error","inject","toConsumableArray","connect","HomeMain","routes","exact","path","assign","App","react_default","a","createElement","index_module","react_router_dom","react_router","route","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2efab163.chunk.js","sourcesContent":["// @flow\r\n\r\nimport { action, observable, computed, decorate } from \"mobx\";\r\nimport remotedev from \"mobx-remotedev\";\r\n\r\nconst _defaultInitialState = {\r\n  welcome: \"Bem vindo ao teste de frontend mobiauto :)\"\r\n};\r\n\r\nclass UserStore {\r\n  constructor(initialState) {\r\n    this.setInitialState(initialState || _defaultInitialState);\r\n  }\r\n\r\n  setInitialState = initialState => {\r\n    const { welcome } = initialState;\r\n\r\n    this.welcome = welcome;\r\n  };\r\n}\r\n\r\nexport default remotedev(\r\n  decorate(UserStore, {\r\n    welcome: observable,\r\n    setInitialState: action\r\n  })\r\n);\r\n","import { action, observable, decorate } from 'mobx'\r\nimport remotedev from 'mobx-remotedev'\r\n\r\nconst _defaultInitialState = {\r\n  isFetching: false,\r\n}\r\n\r\nclass UIStore {\r\n  constructor(initialState) {\r\n    this.setInitialState(initialState || _defaultInitialState)\r\n  }\r\n\r\n  setInitialState = initialState => {\r\n    const { isFetching } = initialState\r\n\r\n    this.isFetching = isFetching\r\n  }\r\n\r\n  setIsFetching = isFetching => {\r\n    this.isFetching = isFetching\r\n  }\r\n}\r\n\r\nexport default remotedev(\r\n  decorate(UIStore, {\r\n    isFetching: observable,\r\n    setInitialState: action,\r\n    setIsFetching: action,\r\n  })\r\n)\r\n","import { observer, inject } from 'mobx-react'\r\nimport RootStore from './RootStore'\r\n\r\nconst instance = new RootStore()\r\n\r\nexport default instance\r\n\r\nexport function connect(component, stores = []) {\r\n  if (!component) throw new Error('Component argument is required.')\r\n  if (stores.length === 0)\r\n    throw new Error('Stores must have at least one store name.')\r\n  return inject(...stores)(observer(component))\r\n}\r\n","import { configure } from 'mobx'\r\nimport UserStore from './UserStore'\r\nimport UIStore from './UIStore'\r\n\r\nexport default class RootStore {\r\n  constructor() {\r\n    configure({ enforceActions: 'always' })\r\n    this.userStore = new UserStore()\r\n    this.uiStore = new UIStore()\r\n  }\r\n}\r\n","import * as React from \"react\";\r\n\r\nclass HomeContainer extends React.Component {\r\n  render() {\r\n    const ViewComponent = this.props.viewComponent;\r\n    const {\r\n      userStore: { welcome }\r\n    } = this.props;\r\n    const viewComponentProps = {\r\n      welcome\r\n    };\r\n\r\n    return <ViewComponent {...viewComponentProps} />;\r\n  }\r\n}\r\n\r\nexport default HomeContainer;\r\n","import * as React from \"react\";\r\n\r\nclass SelectComponent extends React.Component {\r\n  constructor() {\r\n      super();\r\n      this.state = {\r\n          brandData: [],\r\n          modelsData: [],\r\n          yearsData: [],\r\n          selectedBrand: '',\r\n          selectedModel: '',\r\n          selectedYear: '',\r\n          vehicleData: {}\r\n      };\r\n  }\r\n  getBrand() {\r\n    var self = this;\r\n\r\n    self.props.data.checkLoading(true);\r\n\r\n    fetch(\"https://parallelum.com.br/fipe/api/v1/carros/marcas\")\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n      self.props.data.checkLoading(false);\r\n      \r\n      self.setState({\r\n        brandData: responseJson\r\n      })\r\n    })\r\n    .catch((error) => {\r\n        console.error(error);\r\n    });\r\n  }\r\n\r\n  getModels(e) {\r\n    var self = this;\r\n    \r\n    self.props.data.checkLoading(true);\r\n\r\n    self.setState({\r\n      selectedBrand: e.target.value\r\n    })\r\n    \r\n    fetch(\"https://parallelum.com.br/fipe/api/v1/carros/marcas/\"+e.target.value+\"/modelos\")\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n\r\n      self.props.data.checkLoading(false);\r\n\r\n      self.setState({\r\n        modelsData: responseJson.modelos\r\n      })\r\n    })\r\n    .catch((error) => {\r\n        console.error(error);\r\n    });\r\n  }\r\n\r\n  getYears(e){\r\n    var self = this;\r\n    \r\n    self.props.data.checkLoading(true);\r\n\r\n    self.setState({\r\n      selectedModel: e.target.value\r\n    })\r\n    // console.log('Marca ' + self.state.selectedBrand, 'Modelo ' + self.state.selectedModel)\r\n\r\n    fetch(\"https://parallelum.com.br/fipe/api/v1/carros/marcas/\"+self.state.selectedBrand+\"/modelos/\" + e.target.value +\"/anos\")\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n      \r\n      self.props.data.checkLoading(false);\r\n\r\n      self.setState({\r\n        yearsData: responseJson\r\n      })\r\n    })\r\n    .catch((error) => {\r\n        console.error(error);\r\n    });\r\n\r\n    // self.props.data.setData({title: \"ROGERIO RULEZ\"})\r\n  }\r\n  \r\n  getVehicleData(e){\r\n    var self = this;\r\n\r\n    self.props.data.checkLoading(true);\r\n    // console.log('Marca ' + self.state.selectedBrand, 'Modelo ' + self.state.selectedModel)\r\n\r\n    fetch(\"https://parallelum.com.br/fipe/api/v1/carros/marcas/\"+self.state.selectedBrand+\"/modelos/\" + self.state.selectedModel +\"/anos/\" + e.target.value)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {      \r\n      self.props.data.checkLoading(false);\r\n      \r\n      self.props.data.setData(responseJson)\r\n    })\r\n    .catch((error) => {\r\n        console.error(error);\r\n    });\r\n    \r\n  }\r\n  componentDidMount() {\r\n    this.getBrand();\r\n  }\r\n\r\n  render() {\r\n    var self = this;\r\n\r\n    let brandData = self.state.brandData;\r\n    let brandOptions = brandData.map((d) =>    \r\n      <option key={d.codigo} value={d.codigo}>{d.nome}</option>\r\n    )\r\n\r\n    let modelsData = self.state.modelsData;\r\n    let modelsOptions = modelsData.map((d) =>    \r\n      <option key={d.codigo} value={d.codigo}>{d.nome}</option>\r\n    )\r\n\r\n    let yearsData = self.state.yearsData;\r\n    let yearsOptions = yearsData.map((d) =>    \r\n      <option key={d.codigo} value={d.codigo}>{d.nome}</option>\r\n    )\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"col\">\r\n          <label><b>Escolha a Marca</b></label>\r\n          <select value={this.state.selectedBrand} onChange={self.getModels.bind(self)} className=\"form-control\">\r\n            <option value=\"\" disabled>Selecione...</option>\r\n            {brandOptions}\r\n          </select>\r\n        </div>\r\n        <div className=\"col\">\r\n          <label><b>Escolha o Modelo</b></label>\r\n          <select value={this.state.selectedModel} onChange={self.getYears.bind(self)} className=\"form-control\">\r\n            <option value=\"\" disabled>{modelsOptions.length > 0 ? 'Selecione...' : 'Escolha uma marca'}</option>\r\n            {modelsOptions}\r\n          </select>\r\n        </div>\r\n        <div className=\"col\">\r\n          <label><b>Escolha o Ano</b></label>\r\n          <select value={this.state.selectedYear} onChange={self.getVehicleData.bind(self)} className=\"form-control\">\r\n            <option value=\"\" disabled>{yearsOptions.length > 0 ? 'Selecione...' : 'Escolha um modelo'}</option>\r\n            {yearsOptions}\r\n          </select>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectComponent;\r\n","import {observable, decorate, action} from 'mobx'\r\n\r\nclass DataStore {\r\n    mainData;\r\n    isLoading;\r\n\r\n    setData(data) {\r\n        this.mainData = data;\r\n    }\r\n\r\n    checkLoading(status) {\r\n        this.isLoading = status;\r\n    }\r\n}\r\n\r\ndecorate(DataStore, {\r\n    mainData: observable,\r\n    isLoading: observable,\r\n    setData: action,\r\n    checkLoading: action\r\n  });\r\n\r\nexport default new DataStore;","import * as React from \"react\";\r\nimport {observer} from 'mobx-react'\r\n\r\nconst card = observer(class CardComponent extends React.Component {\r\n  constructor() {\r\n      super();\r\n      this.state = {\r\n      };\r\n  }\r\n\r\n  render() {\r\n    var self = this;\r\n    \r\n    if(!self.props.data.mainData)\r\n        return <h5 className=\"mt-4\">Sem dados para exibir</h5>\r\n    debugger\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"card shadow text-left\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title float-right\">{self.props.data.mainData.Valor}</h5>\r\n                    <h5 className=\"card-text\">{self.props.data.mainData.Modelo}</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted float-left\">{self.props.data.mainData.Marca}</h6>\r\n                    <br/>\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col\">\r\n                            <p><b>Ano Modelo: </b> {self.props.data.mainData.AnoModelo}</p>\r\n                            <p><b>Combustivel: </b> {self.props.data.mainData.Combustivel}</p>\r\n                            <p><b>Codigo Fipe: </b> {self.props.data.mainData.CodigoFipe}</p>\r\n                            <p><b>Mês Referencia: </b> {self.props.data.mainData.MesReferencia}</p>\r\n                            <p><b>Tipo do Veiculo: </b> {self.props.data.mainData.TipoVeiculo}</p>\r\n                            <p><b>Sigla do Combustível: {self.props.data.mainData.SiglaCombustivel}</b> </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n      );\r\n  }\r\n})\r\n\r\nexport default card;","import * as React from \"react\";\r\nimport {observer} from 'mobx-react'\r\n\r\nclass LoadingComponent extends React.Component {\r\n  constructor() {\r\n      super();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <React.Fragment>         \r\n            <div className=\"spinner-border text-info mt-3\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </React.Fragment>\r\n      );\r\n  }\r\n}\r\n\r\nexport default LoadingComponent;","import * as React from \"react\";\r\nimport SelectComponent from \"./components/SelectComponent\";\r\nimport store from \"../../store/DataStore\";\r\nimport CardComponent from \"./components/CardComponent\";\r\nimport LoadingComponent from \"./components/LoadingComponent\";\r\nimport {observer} from 'mobx-react'\r\n\r\nconst home = observer(class HomeComponent extends React.Component {\r\n  render() {\r\n    const { welcome } = this.props;\r\n    var isLoading = store.isLoading ? <LoadingComponent></LoadingComponent> : <br/>\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {/* <h2 className=\"text-danger\">{welcome}</h2> */}\r\n        <div className=\"container text-center pt-5\">\r\n          <div className=\"row\">\r\n            <SelectComponent data={store}></SelectComponent>\r\n          </div>\r\n          <span className=\"text-muted\"><i>Selecione as opções acima para filtrar</i></span>\r\n          <br/>\r\n          {isLoading}\r\n          <CardComponent data={store}></CardComponent>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n})\r\n\r\nexport default home;\r\n","import * as React from \"react\";\r\nimport { connect } from \"../../store\";\r\n\r\nimport HomeContainer from \"./HomeContainer\";\r\nimport HomeComponent from \"./HomeComponent\";\r\n\r\nconst Container = connect(\r\n  HomeContainer,\r\n  [\"userStore\", \"uiStore\"]\r\n);\r\n\r\nfunction HomeMain(props) {\r\n  return <Container viewComponent={HomeComponent} {...props} />;\r\n}\r\n\r\nexport default HomeMain;\r\n","import { Home } from \"../pages\";\r\n\r\nconst routes = [\r\n  {\r\n    exact: true,\r\n    path: \"/\",\r\n    component: Home,\r\n    key: \"home\"\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","import React, { Component } from \"react\";\r\nimport { Provider } from \"mobx-react\";\r\nimport store from \"../src/store\";\r\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\r\nimport routes from \"../src/config/routes\";\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider {...store}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            {routes.map(route => (\r\n              <Route {...route} />\r\n            ))}\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}